@use "../../scss/variable";
@use "../../scss/mixin";

/* 
  variable
  mixin
  nested selector
  loop
  if else
  map
  list
  @use
  @include
*/

.pagination-btn {
  font-family: Roboto, Helvetica, Arial, sans-serif;
  font-weight: 500;
  font-size: 0.875rem;
  line-height: 1.75;
  letter-spacing: 0.02857em;
  text-transform: uppercase;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  border-radius: 4px;
  position: relative;
  overflow: hidden;
}

$color-map: (
  primary: (
    default: variable.$primary-color,
    hover: variable.$primary-color-hover,
    disabled: rgba(0, 0, 0, 0.12),
    textColor: #ffffff,
  ),
  secondary: (
    default: variable.$secondary-color,
    hover: variable.$secondary-color-hover,
    disabled: rgba(0, 0, 0, 0.12),
    textColor: #ffffff,
  ),
  default: (
    default: variable.$default-color,
    hover: variable.$default-color-hover,
    disabled: rgba(0, 0, 0, 0.12),
    textColor: rgba(0, 0, 0, 0.87),
  ),
);

@mixin color-variant-class($color, $variant, $active) {
  .pagination-btn-#{$color}-#{$variant}-#{$active} {
    @if $variant == "filled" {
      border: none;
      color: black;
      background-color: white;
      filter: none;
    }
    @if $active == "isActive" {
      background-color: map-get(map-get($color-map, $color), "default");
      color: map-get(map-get($color-map, $color), "textColor");
    }
    // @else if $variant == "outlined" {
    //   background: none;
    //   color: map-get(map-get($color-map, $color), "default");
    //   border: 1px
    //     solid
    //     rgba(map-get(map-get($color-map, $color), "default"), 0.23);
    // } @else {
    //   border: none;
    //   background: none;
    //   color: map-get(map-get($color-map, $color), "default");
    // }
  }
  .pagination-btn-#{$color}-#{$variant}-#{$active}:hover {
    @if $variant == "filled" {
      background-color: map-get(map-get($color-map, "default"), "hover");
      //   color: map-get(map-get($color-map, $color), "textColor");
    }
    @if $active == "isActive" {
      background-color: map-get(map-get($color-map, $color), "hover");
    }
    // @if $active == "isActive" {
    //   background-color: map-get(map-get($color-map, $color), "default");
    //   color: map-get(map-get($color-map, $color), "textColor");
    // }
    // @else if $variant == "outlined" {
    //   background: none;
    //   color: map-get(map-get($color-map, $color), "default");
    //   border: 1px
    //     solid
    //     rgba(map-get(map-get($color-map, $color), "default"), 0.23);
    // } @else {
    //   border: none;
    //   background: none;
    //   color: map-get(map-get($color-map, $color), "default");
    // }
  }

  //   .pagination-btn-#{$color}-#{$variant}-#{$active} {
  //     @if $variant == "filled" {
  //       background-color: map-get(map-get($color-map, $color), "hover");
  //       filter: none;
  //     }
  //     //  @else if $variant == "outlined" {
  //     //   background-color: rgba(
  //     //     map-get(map-get($color-map, $color), "default"),
  //     //     0.08
  //     //   );
  //     //   border: 1px
  //     //     solid
  //     //     rgba(map-get(map-get($color-map, $color), "default"), 0.23);
  //     // } @else {
  //     //   background-color: rgba(
  //     //     map-get(map-get($color-map, $color), "default"),
  //     //     0.08
  //     //   );
  //     // }
  //   }

  //   .pagination-btn-#{$color}-#{$variant}:hover {
  //     @if $variant == "filled" {
  //       background-color: map-get(map-get($color-map, $color), "hover");
  //       filter: none;
  //     }
  //     // @else if $variant == "outlined" {
  //     //   background-color: rgba(
  //     //     map-get(map-get($color-map, $color), "default"),
  //     //     0.08
  //     //   );
  //     //   border: 1px
  //     //     solid
  //     //     rgba(map-get(map-get($color-map, $color), "default"), 0.23);
  //     // } @else {
  //     //   background-color: rgba(
  //     //     map-get(map-get($color-map, $color), "default"),
  //     //     0.08
  //     //   );
  //     // }
  //   }

  //   .pagination-btn-#{$color}-#{$variant}:disabled {
  //     @if $variant == "contained" {
  //       background-color: variable.$disabled-color;
  //       filter: none;
  //       color: variable.$disabled-font-color;
  //     } @else if $variant == "outlined" {
  //       background: none;
  //       color: variable.$disabled-font-color;
  //       border: 1px solid variable.$disabled-color;
  //     } @else {
  //       background: none;
  //       color: variable.$disabled-font-color;
  //     }
  //     pointer-events: none;
  //   }

  //   .pagination-btn-ripple-#{$color}-#{$variant} {
  //     pointer-events: none;
  //     animation: rippleEffect 0.6s linear;
  //     border-radius: 50%;
  //     @if $variant == "contained" {
  //       background-color: white;
  //     } @else {
  //       background-color: map-get(map-get($color-map, $color), "hover");
  //     }
  //   }
}

$colors: ("primary", "secondary", "default");
$variants: ("filled", "outlined", "text");
$actives: ("isActive", "notActive");

@mixin generate-color-variant-classes {
  @each $variant in $variants {
    @each $color in $colors {
      @each $active in $actives {
        @include color-variant-class($color, $variant, $active);
      }
    }
  }
}

@include generate-color-variant-classes();

.pagination-btn-small {
  min-width: 30px;
  height: 30px;
  span {
    @include mixin.font-small;
    pointer-events: none;
  }
}

.pagination-btn-medium {
  min-width: 36px;
  height: 36px;
  span {
    @include mixin.font-medium;
    pointer-events: none;
  }
}

/* 
.btn-medium{
  min-width: 113px;
  height: 36px;
}
.btn-medium span{
    @include mixin.font-medium;
    pointer-events: none;
}
*/

.pagination-btn-large {
  min-width: 42px;
  height: 42px;
  span {
    @include mixin.font-large;
    pointer-events: none;
  }
}

.pagination-btn-circular {
  border-radius: 50%;
}
.pagination-btn-rounded {
  border-radius: 10%;
}

.pagination-btn span {
  user-select: none;
}

@keyframes rippleEffect {
  0% {
    width: 0px;
    height: 0px;
    opacity: 0.3;
  }
  50% {
    width: 75px;
    height: 75px;
    opacity: 0.1;
  }
  100% {
    width: 150px;
    height: 150px;
    opacity: 0;
  }
}

// .reddd {
//   background-color: lightgray;
// }

// .circular-btn {
//   border-radius: 50%;
//   padding: 5px;
//   min-width: 32px;
//   height: 32px;
//   color: red;
// }
